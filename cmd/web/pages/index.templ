package pages

import "github.com/johnoppenheimer/boustifaille/internal/database/models"

templ head() {
	// <script src="https://unpkg.com/htmx.org@1.9.12/dist/htmx.min.js"></script>
	<script src="https://cdn.tailwindcss.com/3.4.3?plugins=typography@0.5.12"></script>
	// <script src="https://unpkg.com/alpinejs@3.13.10/dist/cdn.min.js" defer></script>
	<script src="https://unpkg.com/maplibre-gl@latest/dist/maplibre-gl.js"></script>
	<link href="https://unpkg.com/maplibre-gl@latest/dist/maplibre-gl.css" rel="stylesheet"/>
}

script loadPoints(places []models.Place) {
window._map.on("load", () => {
	console.log("loading points", places);

	window._map.addSource("places", {
		type: "geojson",
		data: {
			type: "FeatureCollection",
			features: places.map((r) => ({
				type: "Feature",
				geometry: {
					type: "Point",
					coordinates: [r.Longitude, r.Latitude],
				},
				properties: {
					title: r.Name,
				},
			})),
		},
	});

	window._map.addLayer({
		id: "places-layer",
		source: "places",
		type: "circle",
		paint: {
			"circle-radius": 10,
			"circle-color": "#007cbf",
		},
	});
});
}

script loadMap() {
const style = {
	version: 8,
	sources: {
		osm: {
			type: "raster",
			tiles: ["https://a.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png"],
			tileSize: 256,
			attribution: "&copy; OpenStreetMap Contributors",
			maxzoom: 19,
		},
	},
	layers: [
		{
			id: "osm",
			type: "raster",
			source: "osm", // This must match the source key above
		},
	],
};

window._map = new maplibregl.Map({
	container: "map",
	style,
	center: [4.840574467303128, 45.762898305863274],
	zoom: 13,
});
}

templ Index(places []models.Place) {
	@Layout(head()) {
		<div class="relative w-screen h-screen">
			<div id="map" class="w-screen h-screen"></div>
			<div class="w-1/5 text-white rounded-lg p-8 bg-neutral-900 absolute left-2 top-2 bottom-2">
				for _, place := range places {
					<div><button type="button">{ place.Name }</button></div>
				}
			</div>
		</div>
		@loadMap()
    @loadPoints(places)
	}
}
